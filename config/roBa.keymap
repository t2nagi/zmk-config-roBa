// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <1>;
    scroll-layers = <2>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        to_default_layer {
            bindings = <&to 0>;
            key-positions = <27 28>;
        };
    };

    macros {
        m_to_function: m_to_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 3>;
            label = "M_TO_FUNCTION";
        };

        m_to_allow: m_to_allow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 4>;
            label = "M_TO_ALLOW";
        };

        m_to_setting: m_to_setting {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 6>;
            label = "M_TO_SETTING";
        };

        m_to_other_1: m_to_other_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5>;
            label = "M_TO_OTHER_1";
        };

        mac_screen_cupture_3: mac_screen_cupture_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp NUMBER_3>;
            label = "MAC_SCREEN_CUPTURE_3";
        };

        mac_screen_cupture_4: mac_screen_cupture_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp NUMBER_4>;
            label = "MAC_SCREEN_CUPTURE_4";
        };

        m_to_mouse_scroll: m_to_mouse_scroll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 2>;
            label = "M_TO_MOUSE_SCROLL";
        };
    };

    behaviors {
        lt_to_function: lt_to_function {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_FUNCTION";
            bindings = <&m_to_function>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_tl_allow: lt_tl_allow {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TL_ALLOW";
            bindings = <&m_to_allow>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_tl_setting: lt_tl_setting {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TL_SETTING";
            bindings = <&m_to_setting>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
        };

        lt_to_other_1: lt_to_other_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_OTHER_1";
            bindings = <&m_to_other_1>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_to_mouse_scroll: lt_to_mouse_scroll {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_MOUSE_SCROLL";
            bindings = <&m_to_mouse_scroll>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        double_tap: double_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLE_TAP";
            bindings = <&kp>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp Q           &kp W     &kp E     &kp R             &kp T                                           &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A           &kp S     &kp D     &kp F             &kp G             &mkp MCLK      &kp TAB        &kp H      &kp J  &kp K      &kp L    &kp SEMI
&kp Z           &kp X     &kp C     &kp V             &kp B             &kp TAB        &kp SEMICOLON  &kp N      &kp M  &kp COMMA  &kp DOT  &lt 6 SLASH
&kp LEFT_SHIFT  &kp LALT  &kp LGUI  &lt 4 LANGUAGE_2  &lt 3 LANGUAGE_1  &kp SPACE      &kp RET        &kp SPACE                             &kp LSHFT
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LC(LEFT)  &kp LC(UP)  &kp LC(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1      &mkp MB3    &mkp MB2       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans        &trans      &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                           &trans
            >;
        };

        mouse_scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        function_and_number {
            bindings = <
&kp NUMBER_1  &kp N2  &kp N3  &kp N4  &kp N5                         &kp N6      &kp N7  &kp N8  &kp N9  &kp N0
&kp F1        &kp F2  &kp F3  &kp F4  &kp F5   &trans       &kp TAB  &kp KP_DOT  &kp N4  &kp N5  &kp N6  &kp MINUS
&kp F6        &kp F7  &kp F8  &kp F9  &kp F10  &kp F11      &kp F12  &kp N0      &kp N1  &kp N2  &kp N3  &kp CARET
&trans        &trans  &trans  &trans  &trans   &trans       &trans   &kp DEL                             &kp RIGHT_SHIFT
            >;
        };

        allow_and_option {
            bindings = <
&kp ESC    &trans     &trans     &trans     &trans                             &trans    &trans    &trans     &trans  &trans
&trans     &trans     &trans     &trans     &trans  &trans      &trans         &kp HOME  &kp UP    &kp END    &trans  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans  &trans      &trans         &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans     &trans     &trans     &trans     &trans  &trans      &kp BACKSPACE  &trans                                 &trans
            >;
        };

        options {
            bindings = <
&kp ESC           &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&kp TAB           &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        setting {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &out OUT_BLE  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &out OUT_USB  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans        &trans                                                  &trans
            >;
        };

        layer_7 {
            bindings = <
&kp Q      &kp W     &kp E     &kp R             &kp T                                           &kp Y                  &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F             &kp G             &mkp MCLK      &kp TAB        &kp H                  &kp J  &kp K      &kp L    &kp SEMI
&kp Z      &kp X     &kp C     &kp V             &kp B             &kp TAB        &kp SEMICOLON  &kp N                  &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL  &kp LALT  &kp LGUI  &lt 3 LANGUAGE_2  &lt 4 LANGUAGE_1  &kp SPACE      &kp BACKSPACE  &mt RIGHT_SHIFT ENTER                             &kp A
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
