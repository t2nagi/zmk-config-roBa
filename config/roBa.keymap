// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <1>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        m_to_function: m_to_function {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 2>;
            label = "M_TO_FUNCTION";
        };

        m_to_allow: m_to_allow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 3>;
            label = "M_TO_ALLOW";
        };

        m_to_setting: m_to_setting {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 4>;
            label = "M_TO_SETTING";
        };
    };

    behaviors {
        lt_to_function: lt_to_function {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TO_FUNCTION";
            bindings = <&m_to_function>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_tl_allow: lt_tl_allow {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TL_ALLOW";
            bindings = <&m_to_allow>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        lt_tl_setting: lt_tl_setting {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_TL_SETTING";
            bindings = <&m_to_setting>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W     &kp E     &kp R                           &kp T                                                    &kp Y                  &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F                           &kp G                      &lt 2 ESC      &kp MINUS      &kp H                  &kp J  &kp K      &kp L    &kp SEMI
&kp Z      &kp X     &kp C     &kp V                           &lt_tl_setting 0 B         &lt 0 TAB      &kp SEMICOLON  &kp N                  &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL  &kp LALT  &kp LGUI  &lt_to_function 0 INT_MUHENKAN  &lt_tl_allow 0 INT_HENKAN  &kp SPACE      &kp BACKSPACE  &mt RIGHT_SHIFT ENTER                             &mt RIGHT_SHIFT DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LC(LEFT)  &kp LC(UP)  &kp LC(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1      &mkp MB3    &mkp MB2       &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans        &trans      &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                           &trans
            >;
        };

        function_and_number {
            bindings = <
&kp N1  &kp N2  &kp N3    &kp N4   &kp N5                         &kp N6      &kp N7  &kp N8  &kp N9  &kp N0
&kp F1  &kp F2  &kp F3    &kp F4   &kp F5   &kp F6       &kp TAB  &kp KP_DOT  &kp N4  &kp N5  &kp N6  &kp MINUS
&kp F7  &kp F8  &kp F9    &kp F10  &kp F11  &kp F12      &none    &kp N0      &kp N1  &kp N2  &kp N3  &kp CARET
&trans  &trans  &kp RCMD  &trans   &trans   &trans       &kp DEL  &kp ENTER                           &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        allow_and_symbol {
            bindings = <
&kp LS(EXCL)   &kp LS(DQT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                       &kp LS(AMPS)  &kp LS(SQT)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(N0)
&trans         &trans       &trans         &trans        &trans         &trans      &kp F13  &kp F6        &kp UP       &kp DOWN      &kp F9        &kp MINUS
&kp LS(EQUAL)  &trans       &trans         &trans        &trans         &trans      &trans   &kp LEFT      &kp DOWN     &kp RIGHT     &kp LEFT      &kp F11
&trans         &trans       &trans         &trans        &trans         &trans      &trans   &trans                                                 &kp F12
            >;
        };

        setting {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                          &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &out OUT_USB  &out OUT_BLE  &bt BT_CLR      &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans          &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
